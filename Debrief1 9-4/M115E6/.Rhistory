knitr::opts_chunk$set(echo = TRUE)
a <- 0
if(a!=0){
print(1/a)
} else{
print("No reciprocal for 0.")
}
a <- 2
if(a!=0){
print(1/a)
} else{
print("No reciprocal for 0.")
}
library(dslabs)
# Write the code to look at the help documentation for the temp_carbon data here.
library(dslabs)
help('temp_carbon')
# Write the code to look at the help documentation for the temp_carbon data here.
temp_carbon_complete <- temp_carbon[which(temp_carbon$temp_anomaly!="NA"),]
if (max(temp_carbon_complete$land_anomaly) > max(temp_carbon_complete$ocean_anomaly)) {
print("Max land temp anomaly is higher than max ocean temp anomaly")
} else {
print("Max ocean temp anomaly is higher than max land temp anomaly")
}
# Write your code chunk here.
ifelse(temp_carbon_complete$ocean_anomaly > 0, print("value > 0"), print("value <= 0"))
avg <- function(x){
s <- sum(x)
n <- length(x)
s/n
}
avg(a)
avg(temp_carbon_complete$temp_anomaly)
perc_diff <- function(x,y) {
xm <- mean(x)
ym <- mean(y)
z <- (xm-ym)/xm
z
}
perc_diff(temp_carbon_complete$land_anomaly,temp_carbon_complete$ocean_anomaly)
# Write your code chunk here.
perc_diff <- function(x,y) {
xm <- mean(x)
ym <- mean(y)
z <- (ym-xm)/ym
z
}
# Write your code chunk here.
perc_diff <- function(x,y) {
xm <- mean(x)
ym <- mean(y)
z <- (ym-xm)/ym
z
}
perc_diff(temp_carbon_complete$land_anomaly,temp_carbon_complete$ocean_anomaly)
median(temp_carbon_complete$year)
median(temp_carbon_complete$temp_anomaly)
median(temp_carbon_complete$land_anomaly)
median(temp_carbon_complete$ocean_anomaly)
median(temp_carbon_complete$ocean_carbon_emissions)
m <- vector(length=ncol(temp_carbon_complete)) # 1. output
for (i in 1:length(m)) {                       # 2. sequence
m[i] <- median(temp_carbon_complete[,i])     # 3. body
}
m
m <- 1:5               # output
for(i in 1:length(m)){ # sequence
print(m[i])          # body
}
# Write your code chunk here.
View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in )
# Write your code chunk here.
View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] = temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=ncol(temp_carbon_complete))
for(i in length(m)){
m[i] = temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] = temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length(temp_carbon_complete))
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(lengthnrow(temp_carbon_complete))
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] = temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[temp_carbon_complete$year[i]] -  temp_carbon_complete$land_anomaly[temp_carbon_complete$year[i]]
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length(temp_carbon_complete$year))
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
length(m)
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
temp_carbon_complete$ocean_anomaly[1]
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
temp_carbon_complete$ocean_anomaly[1]
temp_carbon_complete$land_anomaly[1]
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
a <- temp_carbon_complete$ocean_anomaly[1]  - temp_carbon_complete$land_anomaly[1]
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
a <- temp_carbon_complete$ocean_anomaly[1]  - temp_carbon_complete$land_anomaly[1]
a
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m[i] <- .47
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
m[i] <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
}
m[1] <- .47
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
diff <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
m[i] <- diff
}
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in length(m)){
diff <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
m[i] <- diff
}
temp_carbon_complete$ocean_anomaly[i]
m
# Write your code chunk here.
#View(temp_carbon_complete)
m <- vector(length=nrow(temp_carbon_complete))
for(i in 1:length(m)){
diff <- temp_carbon_complete$ocean_anomaly[i] - temp_carbon_complete$land_anomaly[i]
m[i] <- diff
}
m
apply(temp_carbon_complete,MARGIN = 2,FUN = median)
apply(temp_carbon_complete,MARGIN = 0,FUN = median)
apply(temp_carbon_complete,MARGIN = 1,FUN = median)
apply(temp_carbon_complete,MARGIN = 2,FUN = median)
system.time (for (i in 1:1e+8) {
sqrt(i)
})
rm(i)
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+50))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+20))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+10))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+2))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+7))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+9))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+10))
system.time(sqrt(1:1e+8))
system.time(sqrt(1:1e+11))
system.time (for (i in 1:1e+7) {
sqrt(i)
})
rm(i)
system.time (for (i in 1:1e+2) {
sqrt(i)
})
rm(i)
system.time(sqrt(1:1e+2))
#system.time(sqrt(1:1e+11))
system.time (for (i in 1:1e+9) {
sqrt(i)
})
rm(i)
system.time(sqrt(1:1e+9))
#system.time(sqrt(1:1e+11))
knitr::opts_chunk$set(echo = TRUE)
propm <- vector(length=nrow(babynames))
#install.packages('babynames')
library(babynames)
babynames
propm <- vector(length=nrow(babynames))
for(i in 1:length(propm)){
propm[i] = mean(babynames$prop[i])
}
#install.packages('babynames')
library(babynames)
babynames
propm <- vector(length=nrow(babynames))
for(i in 1:length(propm)){
meanYear <- babynames$year[year == ""]
}
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
length(babynames$year)
propm
propm <- vector(length=ncol(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
length(babynames$year)
propm
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
print(distinct(babynames))
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
babynames[duplicated == FALSE, ]
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
babynames[duplicated = FALSE, ]
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
babynames[duplicated = TRUE, ]
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
m <- babynames[duplicated(babynames$year), ]
m
propm <- vector(length=nrow(babynames))
#for(i in 1:length(propm)){
#meanYear <- babynames$year[year == ""]
#}
m <- babynames[duplicated(babynames$year) == FALSE, ]
m
knitr::opts_chunk$set(echo = TRUE)
library(dslabs)
# Write the code to look at the help documentation for the temp_carbon data here.
help('temp_carbon')
knitr::opts_chunk$set(echo = TRUE)
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
#install.packages('babynames')
library(babynames)
babynames
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
each_year <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
years <- babynames[duplicated(babynames$year) == FALSE, ]
for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] = mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
}
#propM
#each_year
system.time(for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] = mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
})
propM_and_year <- data.frame(year = each_year, mean_prop = propM)
propM_and_year
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
each_year <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
years <- babynames[duplicated(babynames$year) == FALSE, ]
for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] = mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
}
#propM
#each_year
propM_and_year <- data.frame(year = each_year, mean_prop = propM)
propM_and_year
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
each_year <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
years <- babynames[duplicated(babynames$year) == FALSE, ]
for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] = mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
}
#propM
#each_year
propM_and_year <- data.frame(year = each_year, mean_prop = propM)
propM_and_year
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
each_year <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
years <- babynames[duplicated(babynames$year) == FALSE, ]
for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] = mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
}
#propM
#each_year
propM_and_year <- data.frame(year = each_year, mean_prop = propM)
propM_and_year
tapply(babynames$prop, babynames$year, mean)
system.time(tapply(babynames$prop, babynames$year, mean))
with(propM_and_year, plot(year, mean_prop))
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
each_year <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
years <- babynames[duplicated(babynames$year) == FALSE, ]
for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] <- mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
}
#propM
#each_year
propM_and_year <- data.frame(year = each_year, mean_prop = propM)
propM_and_year
propM <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
each_year <- vector(length=nrow(babynames[duplicated(babynames$year) == FALSE,]))
years <- babynames[duplicated(babynames$year) == FALSE, ]
for(i in 1:length(m)){
tempMatrix <- babynames[babynames$year == years$year[i],]
propM[i] <- mean(tempMatrix$prop)
each_year[i] <- tempMatrix$year[1]
}
#propM
#each_year
propM_and_year <- data.frame(year = each_year, mean_prop = propM)
propM_and_year
#install.packages('babynames')
library(babynames)
babynames
